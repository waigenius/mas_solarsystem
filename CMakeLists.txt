cmake_minimum_required(VERSION 3.8)
project(mas_solarsystem)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(std_msgs REQUIRED)
find_package(geometry_msgs REQUIRED)
find_package(visualization_msgs REQUIRED)
find_package(tf2_ros REQUIRED)

# uncomment the following section in order to fill in
# further dependencies manually.
# find_package(<dependency> REQUIRED)

#-----things generate-----------
#add_executable(mas_solarsystem src/mas_solarsystem.cpp)
#target_include_directories(mas_solarsystem PUBLIC
 # $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
 # $<INSTALL_INTERFACE:include>)
#target_compile_features(mas_solarsystem PUBLIC c_std_99 cxx_std_17)  # Require C99 and C++17

#install(TARGETS mas_solarsystem
 # DESTINATION lib/${PROJECT_NAME})

#---------end things---------------

#Path tomas_soloarsystem/ src directory
include_directories(include)
add_executable(celestial_body_node src/celestial_body_node.cpp src/celestial_body.cpp)

ament_target_dependencies(
	celestial_body_node
	rclcpp
	std_msgs
	geometry_msgs
	visualization_msgs
	tf2_ros
)

install(TARGETS celestial_body_node
   DESTINATION lib/${PROJECT_NAME})

install(DIRECTORY
  launch cfg
  DESTINATION share/${PROJECT_NAME}
)


if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

ament_package()
